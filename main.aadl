--
--                              POK header
-- 
--  The following file is a part of the POK project. Any modification should
--  be made according to the POK licence. You CANNOT use this file or a part 
--  of a file for your own project.
-- 
--  For more information on the POK licence, please see our LICENCE FILE
--
--  Please follow the coding guidelines described in doc/CODING_GUIDELINES
--
--                                      Copyright (c) 2007-2009 POK team 
--
--  Created by julien on Wed Oct 14 12:42:24 2009 
--
package ardupilot_system

public

	with pok;
	with poklib;
	with ardupilot_platform;
	with ardupilot_software;

	system ardupilot
	end ardupilot;
	
	
	system APM_2_6
	end APM_2_6;
	
-- rc_loop
	
	-- 1000 / (100/x) = 10 * x
	
 	thread thr_rc_loop
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 100 ms;
      Period => 10 Ms;
    end thr_rc_loop;
   	thread implementation thr_rc_loop.i
   	end thr_rc_loop.i;
	
	process process_rc_loop
	end process_rc_loop;

	process implementation process_rc_loop.i
		subcomponents
		thr: thread thr_rc_loop.i;
	end process_rc_loop.i;
	
-- throttle_loop

 	thread thr_throttle_loop
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 450 ms;
      Period => 20 Ms;
    end thr_throttle_loop;
   	thread implementation thr_throttle_loop.i
   	end thr_throttle_loop.i;
	
	process process_throttle_loop
	end process_throttle_loop;

	process implementation process_throttle_loop.i
		subcomponents
		thr: thread thr_throttle_loop.i;
	end process_throttle_loop.i;
	

-- update_GPS 

 	thread thr_update_GPS
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 900 ms;
      Period => 20 Ms;
    end thr_update_GPS;
   	thread implementation thr_update_GPS.i
   	end thr_update_GPS.i;
	
	process process_update_GPS
	end process_update_GPS;

	process implementation process_update_GPS.i
		subcomponents
		thr: thread thr_update_GPS.i;
	end process_update_GPS.i;
	
-- update_batt_compass 

 	thread thr_update_batt_compass
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 720 ms;
      Period => 100 Ms;
    end thr_update_batt_compass;
   	thread implementation thr_update_batt_compass.i
   	end thr_update_batt_compass.i;
	
	process process_update_batt_compass
	end process_update_batt_compass;

	process implementation process_update_batt_compass.i
		subcomponents
		thr: thread thr_update_batt_compass.i;
	end process_update_batt_compass.i;
	
	
-- read_aux_switches  

 	thread thr_read_aux_switches
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 50 ms;
      Period => 100 Ms;
    end thr_read_aux_switches;
   	thread implementation thr_read_aux_switches.i
   	end thr_read_aux_switches.i;
	
	process process_read_aux_switches
	end process_read_aux_switches;

	process implementation process_read_aux_switches.i
		subcomponents
		thr: thread thr_read_aux_switches.i;
	end process_read_aux_switches.i;


-- arm_motors_check

 	thread thr_arm_motors_check
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 10 ms;
      Period => 100 Ms;
    end thr_arm_motors_check;
   	thread implementation thr_arm_motors_check.i
   	end thr_arm_motors_check.i;
	
	process process_arm_motors_check
	end process_arm_motors_check;

	process implementation process_arm_motors_check.i
		subcomponents
		thr: thread thr_arm_motors_check.i;
	end process_arm_motors_check.i;


--  auto_trim

 	thread thr_auto_trim
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 140 ms;
      Period => 100 Ms;
    end thr_auto_trim;
   	thread implementation thr_auto_trim.i
   	end thr_auto_trim.i;
	
	process process_auto_trim
	end process_auto_trim;

	process implementation process_auto_trim.i
		subcomponents
		thr: thread thr_auto_trim.i;
	end process_auto_trim.i;


-- update_altitude

 	thread thr_update_altitude
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 1000 ms;
      Period => 100 Ms;
    end thr_update_altitude;
   	thread implementation thr_update_altitude.i
   	end thr_update_altitude.i;
	
	process process_update_altitude
	end process_update_altitude;

	process implementation process_update_altitude.i
		subcomponents
		thr: thread thr_update_altitude.i;
	end process_update_altitude.i;

-- run_nav_updates

 	thread thr_run_nav_updates
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 800 ms;
      Period => 40 Ms;
    end thr_run_nav_updates;
   	thread implementation thr_run_nav_updates.i
   	end thr_run_nav_updates.i;
	
	process process_run_nav_updates
	end process_run_nav_updates;

	process implementation process_run_nav_updates.i
		subcomponents
		thr: thread thr_run_nav_updates.i;
	end process_run_nav_updates.i;


-- update_thr_cruise 

 	thread thr_update_thr_cruise
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 50 ms;
      Period => 10 Ms;
    end thr_update_thr_cruise;
   	thread implementation thr_update_thr_cruise.i
   	end thr_update_thr_cruise.i;
	
	process process_update_thr_cruise
	end process_update_thr_cruise;

	process implementation process_update_thr_cruise.i
		subcomponents
		thr: thread thr_update_thr_cruise.i;
	end process_update_thr_cruise.i;

-- three_hz_loop 

 	thread thr_three_hz_loop
   	properties
      Dispatch_Protocol => Periodic;
      Compute_Execution_Time => 0 ms .. 90 ms;
      Period => 330 Ms;
    end thr_three_hz_loop;
   	thread implementation thr_three_hz_loop.i
   	end thr_three_hz_loop.i;
	
	process process_three_hz_loop
	end process_three_hz_loop;

	process implementation process_three_hz_loop.i
		subcomponents
		thr: thread thr_three_hz_loop.i;
	end process_three_hz_loop.i;




	
	system implementation APM_2_6.i
		subcomponents
			 rc_loop: process process_rc_loop.i;
			 throttle_loop: process process_throttle_loop.i;
			 update_GPS: process process_update_GPS.i;
			 update_batt_compass: process process_update_batt_compass.i;
			 read_aux_switches: process process_read_aux_switches.i;
			 arm_motors_check: process process_arm_motors_check.i;
			 auto_trim: process process_auto_trim.i;
			 update_altitude: process process_update_altitude.i;
			 run_nav_updates: process process_run_nav_updates.i;
			 update_thr_cruise: process process_update_thr_cruise.i;
			 three_hz_loop: process process_three_hz_loop.i;
			 
			 
	end APM_2_6.i;
	

	system implementation ardupilot.i
		subcomponents
			kernel: processor poklib::pok_kernel.x86_qemu_four_partitions_with_libmath;
			mem: memory ardupilot_platform::mem.i;
			prs_gps: process ardupilot_software::process_gps.i;
			prs_mgmt: process ardupilot_software::process_mgmt.i;
			prs_throttle: process ardupilot_software::process_throttle.i;
			prs_yaw: process ardupilot_software::process_yaw.i;
		connections
			c1: port prs_gps.altitude -> prs_mgmt.altitude;
			c2: port prs_gps.latitude -> prs_mgmt.latitude;
			c3: port prs_gps.longitude -> prs_mgmt.longitude;
			c4: port prs_mgmt.speed -> prs_throttle.speed;
			c5: port prs_mgmt.angle -> prs_yaw.angle;
		properties
			Actual_Memory_Binding => (reference (mem.segment1)) applies to prs_gps;
			Actual_Memory_Binding => (reference (mem.segment2)) applies to prs_mgmt;
			Actual_Memory_Binding => (reference (mem.segment3)) applies to prs_throttle;
			Actual_Memory_Binding => (reference (mem.segment4)) applies to prs_yaw;

			Actual_Processor_Binding => (reference (kernel.partition1)) applies to prs_gps;
			Actual_Processor_Binding => (reference (kernel.partition2)) applies to prs_mgmt;
			Actual_Processor_Binding => (reference (kernel.partition3)) applies to prs_throttle;
			Actual_Processor_Binding => (reference (kernel.partition4)) applies to prs_yaw;

			POK::Additional_Features => (console, libc_stdio, libc_stdlib) applies to kernel.partition1;
			POK::Additional_Features => (libmath, console, libc_stdio, libc_stdlib) applies to kernel.partition2;
			POK::Additional_Features => (console, libc_stdio, libc_stdlib) applies to kernel.partition3;
			POK::Additional_Features => (console, libc_stdio, libc_stdlib) applies to kernel.partition4;
	end ardupilot.i;

end ardupilot_system;